
~~~~~~~EVERYTHING BELOW HERE IS FOR PDC1 (DEPRECATED

Requirements:

Easy to use, error input handling, nice layout, can quit at any point
Central File handler, Three file-reading function, three file-writing functions
Use Course File I/O
Correctly apply atleast 2 collections

Opened by Netbeans, compiled, run without issue or error
Complex common features implemented
Robust, no exceptions thrown, message feedback for correct input

10+ reasonable classes with reasonable methods. Well-presented relationships, 

Comments, easy-to-understand code, SOLID design principles


    UI:
Users can figure out how to use the system and interact with it easily. CUI can give user-friendly messages when a false input is given. 
The output layout is clean and nice. Users can quit at any step without being given an error message


    File I/O:
There is a central File I/O component, managing file reading and writing. 
There are more than three functions involving File reading and more than three functions involving File writing. 
The File I/O classes delivered in the lectures are utilized. 
 
Two kinds of collections (List, Map, Set) are properly applied to the programs. 


    Functionality & Usability:
The program can be opened by NetBeans12 IDE, compiled, running without any issue. 
The program can run without any run time error by giving the expected inputs.

The functionality of the program is complex enough, having most of the common features of the project implemented (dependent on the size of the team).
 
The implemented features are robust. Any input can be handled perfectly without throwing exceptions. 
Meanwhile, messages can be prompted to the end-users for the correct input.


    Design & Implementation
The project can be compiled without any errors. There are more than 9 reasonable classes (10+) with reasonable methods. 
The relationships among the classes are well presented. 
All the OOP concepts are applied, including abstraction, encapsulation, inheritance, and polymorphism.

SOLID design principles are applied where appropriate.  Comments of methods are given, and the codes are easy to read.  
The program is very robust and can handle all kinds of inputs without throwing an exception.